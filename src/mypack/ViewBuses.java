/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mypack;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wali
 */


public class ViewBuses extends javax.swing.JInternalFrame {

    /**
     * Creates new form AdminLogin
     */
    
    Connection con=null;
    Statement st;
    ResultSet rs;
    
    public ViewBuses() 
    {
        initComponents();
        con=Connect.ConnectDB();
         try 
        {
         st = con.createStatement();
        } catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(this, ex);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        searchbox = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        searchtxt = new javax.swing.JTextField();
        View = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        viewall = new javax.swing.JButton();
        Update = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        searchbox2 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        nametxt = new javax.swing.JTextField();
        UView = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        searchtxt2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        typetxt = new javax.swing.JTextField();
        captxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        numtxt = new javax.swing.JTextField();
        pricetxt = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        idtxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        Reset = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setClosable(true);
        setTitle("View Buses");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/img/busicon.png"))); // NOI18N
        setVisible(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(102, 51, 255));

        searchbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Bus Id", "Bus Name", "Bus Number", "Bus Type", "Bus Capacity", "Price Per km" }));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Search By");

        View.setBackground(new java.awt.Color(0, 0, 0));
        View.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        View.setForeground(new java.awt.Color(255, 255, 255));
        View.setText("View");
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Clear Table");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bus Id", "Bus Name", "Bus Type", "Capacity", "Bus Number", "Price Per Km"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl);

        viewall.setBackground(new java.awt.Color(0, 0, 0));
        viewall.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        viewall.setForeground(new java.awt.Color(255, 255, 255));
        viewall.setText("ViewAll");
        viewall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(View, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(viewall)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(23, 23, 23)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(View))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(viewall))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPane1.addTab("View", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(102, 51, 255));

        searchbox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Bus Id", "Bus Name", "Bus Number", "Bus Type", "Bus Capacity", "Bus Number", "Price Per km" }));

        jLabel13.setText("Search By : ");

        UView.setBackground(new java.awt.Color(0, 0, 0));
        UView.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UView.setForeground(new java.awt.Color(255, 255, 255));
        UView.setText("View");
        UView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UViewActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Exit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        updatebtn.setBackground(new java.awt.Color(0, 0, 0));
        updatebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updatebtn.setForeground(new java.awt.Color(255, 255, 255));
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        jLabel14.setText("Name :");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Bus Name ");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Type ");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Capacity ");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Bus Number ");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("Price Per KM ");

        idtxt.setEditable(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Bus ID ");

        Reset.setBackground(new java.awt.Color(0, 0, 0));
        Reset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Reset.setForeground(new java.awt.Color(255, 255, 255));
        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(typetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(captxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(numtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(36, 36, 36)
                                    .addComponent(idtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(Reset)
                                .addGap(18, 18, 18)
                                .addComponent(updatebtn)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchbox2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchtxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UView, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(UView)
                    .addComponent(jLabel14)
                    .addComponent(searchtxt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(captxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pricetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(updatebtn)
                    .addComponent(Reset))
                .addGap(86, 86, 86))
        );

        javax.swing.GroupLayout UpdateLayout = new javax.swing.GroupLayout(Update);
        Update.setLayout(UpdateLayout);
        UpdateLayout.setHorizontalGroup(
            UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UpdateLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        UpdateLayout.setVerticalGroup(
            UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Update", Update);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("View And Update Buses");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel)tbl.getModel();
        tm.setNumRows(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed
        // TODO add your handling code here:
        
         DefaultTableModel tm = (DefaultTableModel)tbl.getModel();
         tm.setNumRows(0);
         String strbox = searchbox.getSelectedItem().toString();

        if(strbox.equals(" "))
        {
               JOptionPane.showMessageDialog(this, "Error! \n " +
                       "Choose one Value From Combo Box \n to be searched");
                       searchbox.requestFocus();
                       searchtxt.setText(null);
        }
        else if(searchtxt.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Please Insert Value To Be Searched!");
            searchtxt.requestFocus();
        }

        else if(strbox.equals("Bus Id"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_id = '" + searchtxt.getText() + "'");
                
             if(rs.next())
            {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                , rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
               
            }
             else{
        JOptionPane.showMessageDialog(this,"Invalid ID ! !");
        searchtxt.requestFocus();
             }
            } catch (Exception ex) {
  
                  ex.printStackTrace();
                
            }
        }

        else if(strbox.equals("Bus Name"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_Name = '" + searchtxt.getText() + "'");

             if(rs.next())
            {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry");
              searchtxt.requestFocus();
             }


            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }
        }

        else if(strbox.equals("Bus Type"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_Type = '" + searchtxt.getText() + "'");

             if(rs.next())
            {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                while(rs.next())
                {
                    tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                            , rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});

                }
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
              searchtxt.requestFocus();
             }



            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }
        }
        else if(strbox.equals("Bus Capacity"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_Capacity = '" + searchtxt.getText() + "'");

             if(rs.next())
            {
                
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                
                while(rs.next())
                {
                    tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                    , rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                }
            }
             else
             {
             JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
             searchtxt.requestFocus();
             }


            } catch (SQLException ex) 
            {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Invalid Entry , Record Doesnt Exists!");
            }
        }

        else if(strbox.equals("Bus Number"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_Number = '" + searchtxt.getText() + "'");

            if(rs.next())
            {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
            }
            else
            {
            JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
            searchtxt.requestFocus();
            }


            } catch (SQLException ex) {
                ex.printStackTrace();
                 JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }

        }
        else if(strbox.equals("Price Per km"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_PricePerKm = '" + searchtxt.getText() + "'");

             if(rs.next())
            {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
            }
             else
             {
             JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
             searchtxt.requestFocus();
             }


            } catch (SQLException ex) {
                ex.printStackTrace();
                 JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }

        }
        else
        {
            JOptionPane.showMessageDialog(this,"Invalid Search");
        }
    }//GEN-LAST:event_ViewActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void UViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UViewActionPerformed
        // TODO add your handling code here:
        
        String strbox = searchbox2.getSelectedItem().toString();

        if(strbox.equals(" "))
        {
               JOptionPane.showMessageDialog(this, "Error! \n " +
                       "Choose one Value From Combo Box \n to be searched");
                       searchbox2.requestFocus();
                       searchtxt2.setText(null);
        }
        else if(searchtxt2.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Please Insert Value To Be Searched!");
            searchtxt2.requestFocus();
        }

        else if(strbox.equals("Bus Id"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_id = '" + searchtxt2.getText() + "'");
                
             if(rs.next())
            {
                idtxt.setText(rs.getString(1));
                nametxt.setText(rs.getString(2));
                typetxt.setText(rs.getString(3));
                captxt.setText(rs.getString(4));
                numtxt.setText(rs.getString(5));
                pricetxt.setText(rs.getString(6));
               
            }
             else{
        JOptionPane.showMessageDialog(this,"Invalid ID ! !");
        searchtxt2.requestFocus();
             }
            } catch (SQLException | HeadlessException ex) {
            }
        }

        else if(strbox.equals("Bus Name"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_Name = '" + searchtxt2.getText() + "'");

             if(rs.next())
                {
                    idtxt.setText(rs.getString(1));
                    nametxt.setText(rs.getString(2));
                    typetxt.setText(rs.getString(3));
                    captxt.setText(rs.getString(4));
                    numtxt.setText(rs.getString(5));
                    pricetxt.setText(rs.getString(6));
                }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry");
              searchtxt2.requestFocus();
             }


            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }
        }

        else if(strbox.equals("Bus Type"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_Type = '" + searchtxt2.getText() + "'");

             if(rs.next())
            {
                idtxt.setText(rs.getString(1));
                nametxt.setText(rs.getString(2));
                typetxt.setText(rs.getString(3));
                captxt.setText(rs.getString(4));
                numtxt.setText(rs.getString(5));
                pricetxt.setText(rs.getString(6));
                
                while(rs.next())
                {
                    idtxt.setText(rs.getString(1));
                    nametxt.setText(rs.getString(2));
                    typetxt.setText(rs.getString(3));
                    captxt.setText(rs.getString(4));
                    numtxt.setText(rs.getString(5));
                    pricetxt.setText(rs.getString(6));

                }
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
              searchtxt2.requestFocus();
             }



            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }
        }
        else if(strbox.equals("Bus Capacity"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_Capacity = '" + searchtxt.getText() + "'");

             if(rs.next())
            {
                
                idtxt.setText(rs.getString(1));
                nametxt.setText(rs.getString(2));
                typetxt.setText(rs.getString(3));
                captxt.setText(rs.getString(4));
                numtxt.setText(rs.getString(5));
                pricetxt.setText(rs.getString(6));
                while(rs.next())
                    {

                        idtxt.setText(rs.getString(1));
                        nametxt.setText(rs.getString(2));
                        typetxt.setText(rs.getString(3));
                        captxt.setText(rs.getString(4));
                        numtxt.setText(rs.getString(5));
                        pricetxt.setText(rs.getString(6));

                    }
            }
             else
             {
             JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
             searchtxt2.requestFocus();
             }


            } catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(this,"Invalid Entry , Record Doesnt Exists!");
            }
        }

        else if(strbox.equals("Bus Number"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_Number = '" + searchtxt2.getText() + "'");

            if(rs.next())
            {
                idtxt.setText(rs.getString(1));
                nametxt.setText(rs.getString(2));
                typetxt.setText(rs.getString(3));
                captxt.setText(rs.getString(4));
                numtxt.setText(rs.getString(5));
                pricetxt.setText(rs.getString(6));
            }
            else
            {
            JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
            searchtxt2.requestFocus();
            }


            } catch (SQLException ex) 
            {
                 JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }

        }
        else if(strbox.equals("Price Per km"))
        {
            try {
                rs = st.executeQuery("select * from TB_buses where Bus_PricePerKm = '" + searchtxt2.getText() + "'");

             if(rs.next())
            {
                idtxt.setText(rs.getString(1));
                nametxt.setText(rs.getString(2));
                typetxt.setText(rs.getString(3));
                captxt.setText(rs.getString(4));
                numtxt.setText(rs.getString(5));
                pricetxt.setText(rs.getString(6));
            }
             else
             {
             JOptionPane.showMessageDialog(this,"Invalid Search \n Please Try Again");
             searchtxt2.requestFocus();
             }


            } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(this,"Invalid Search, Record Doesnt Exists!");
            }

        }
        else
        {
            JOptionPane.showMessageDialog(this,"Invalid Search");
        }
        
        
    }//GEN-LAST:event_UViewActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
         String bid= "'" + idtxt.getText() + "'";
         String bname = "'" + nametxt.getText() + "'";
         String type = "'" + typetxt.getText() + "'";
         String cap = "'" + captxt.getText() + "'";
         String num = "'" + numtxt.getText() + "'";
         String price = "'" + pricetxt.getText() + "'";
        
         
         if(nametxt.getText().equals("") || typetxt.getText().equals("") ||
                 captxt.getText().equals("") || numtxt.getText().equals("") || 
                 pricetxt.getText().equals("") || idtxt.getText().equals(""))
         {
             JOptionPane.showMessageDialog(this, "Please Fill All the Fields");
         }
         else
         {
        try
                {

                st.executeUpdate("Update TB_Buses set Bus_Name = "+bname+" ,Bus_type="+type+",Bus_capacity="+cap+",Bus_number="+num+",Bus_PricePerKm="+price+" where Bus_id="+bid+"    ");
                JOptionPane.showMessageDialog(this, "Bus Details Updated");
                clearfields();
                searchtxt2.setText("");
                


                }catch(SQLException | HeadlessException e)
                {   
                    JOptionPane.showMessageDialog(this, "Something is wrong ! Please check all the fields again");
                }
        
        
         }
        
    }//GEN-LAST:event_updatebtnActionPerformed

    private void viewallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewallActionPerformed
        // TODO add your handling code here:
         DefaultTableModel tm = (DefaultTableModel)tbl.getModel();
        tm.setNumRows(0);
        
        try {
                rs = st.executeQuery("select * from TB_buses ");

             if(rs.next())
            {
                
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                
                while(rs.next())
                {
                    tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                    , rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6)});
                }
            }
             else
             {
             JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
             }


            } catch (SQLException ex) 
            {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"No Record Found!");
            }
        
        
    }//GEN-LAST:event_viewallActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
        clearfields();
    }//GEN-LAST:event_ResetActionPerformed
    
    public void clearfields()
    {
        idtxt.setText("");
        nametxt.setText("");
        typetxt.setText("");
        captxt.setText("");
        numtxt.setText("");
        pricetxt.setText("");
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Reset;
    private javax.swing.JButton UView;
    private javax.swing.JPanel Update;
    private javax.swing.JButton View;
    private javax.swing.JTextField captxt;
    private javax.swing.JTextField idtxt;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nametxt;
    private javax.swing.JTextField numtxt;
    private javax.swing.JTextField pricetxt;
    private javax.swing.JComboBox searchbox;
    private javax.swing.JComboBox searchbox2;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JTextField searchtxt2;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField typetxt;
    private javax.swing.JButton updatebtn;
    private javax.swing.JButton viewall;
    // End of variables declaration//GEN-END:variables
}
