/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mypack;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wali
 */


public class ViewRoutine extends javax.swing.JInternalFrame {

    /**
     * Creates new form AdminLogin
     */
    
    Connection con=null;
    Statement st;
    ResultSet rs;
    ResultSet rs2;
    ResultSet rs3;
    ResultSet rs4;
    ResultSet rs5;
    
    public ViewRoutine() 
    {
        initComponents();
        con=Connect.ConnectDB();
         try 
        {
         st = con.createStatement();
        } catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(this, ex);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        searchbox = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        searchtxt = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        Update = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        searchbox2 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        bnametxt = new javax.swing.JTextField();
        btnSearch1 = new javax.swing.JButton();
        BtnExit = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        searchtxt2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        datetxt = new javax.swing.JTextField();
        timetxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        rnametxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        routidtxt = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setClosable(true);
        setTitle("View & Update Routinee");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/img/adminicon.png"))); // NOI18N
        setVisible(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(102, 51, 255));

        searchbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Routinee Id", "Bus Num", "Route Name", "Date", "Time" }));
        searchbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchboxItemStateChanged(evt);
            }
        });
        searchbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchboxActionPerformed(evt);
            }
        });

        jLabel11.setText("Search By : ");

        btnSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("View");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Clear Table");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel12.setText("Name :");

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Routinee Id", "Bus Number", "Route Name", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(jButton4)
                .addGap(26, 26, 26)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3))
                .addGap(0, 23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("View", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(102, 51, 255));

        searchbox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Routinee Id", "Bus Number", "Route Name", "Date", "Time" }));

        jLabel13.setText("Search By : ");

        btnSearch1.setBackground(new java.awt.Color(0, 0, 0));
        btnSearch1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSearch1.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch1.setText("View");
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });

        BtnExit.setBackground(new java.awt.Color(0, 0, 0));
        BtnExit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        BtnExit.setForeground(new java.awt.Color(255, 255, 255));
        BtnExit.setText("Exit");
        BtnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExitActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 0, 0));
        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel14.setText("Name :");

        jLabel15.setText("Bus Number ");

        jLabel16.setText("Date");

        jLabel17.setText("Time");

        jLabel20.setText("Route Name ");

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("(YY:MM:DD)");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("(H:M:S)");

        jLabel18.setText("Routinee ID");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(searchbox2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(searchtxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(datetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(timetxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(rnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel2)))
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(routidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(bnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addComponent(btnUpdate)
                        .addGap(31, 31, 31)
                        .addComponent(BtnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(btnSearch1)
                    .addComponent(jLabel14)
                    .addComponent(searchtxt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(routidtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(bnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rnametxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(datetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(BtnExit))
                .addGap(89, 89, 89))
        );

        javax.swing.GroupLayout UpdateLayout = new javax.swing.GroupLayout(Update);
        Update.setLayout(UpdateLayout);
        UpdateLayout.setHorizontalGroup(
            UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        UpdateLayout.setVerticalGroup(
            UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Update", Update);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel4.setText("View and Update Routinee");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel4))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jLabel4)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel)tbl.getModel();
        tm.setNumRows(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        
         DefaultTableModel tm = (DefaultTableModel)tbl.getModel();
        tm.setNumRows(0);
        String strbox = searchbox.getSelectedItem().toString();

        if(strbox.equals(" "))
        {
               JOptionPane.showMessageDialog(this, "Error! \n " +
                       "Choose one Value From Combo Box \n to be searched");
                       searchbox.requestFocus();
                       searchtxt.setText(null);
        }
        else if(searchtxt.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Please Insert Value To Be Searched!");
            searchtxt.requestFocus();
        }

        else if(strbox.equals("Routinee Id"))
        {
            try {
                rs = st.executeQuery("select * from TB_Routinee where Rout_id = '" + searchtxt.getText() + "'");
                
                
               
                    
                
                if(rs.next())
            {
               /* String id="'" + rs.getString(1)+ "'";
                String bid= "'" + rs.getString(2)+ "'";
                String rid= "'" + rs.getString(3)+ "'";
                String date= "'" + rs.getString(4)+ "'";
                String time ="'" + rs.getString(5)+ "'";
                
                
                st.executeQuery(" Declare @busnum nvarchar set @busnum=(select bus_number from TB_buses where bus_id = "+bid+") declare @rname nvarchar set @rname=(select R_Name From TB_Route where R_id="+rid+" ) ");
                String busnumber;
                    busnumber = "@busnum";
                String routename = "@rname";
                tm.insertRow(tm.getRowCount(), new Object[]{id,busnumber,routename,date,time});
                    
                    */
              
                
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                , rs.getString(3), rs.getString(4), rs.getString(5)});
                // For Bus_Name and Route_Name
                String Busid = rs.getString(2);
                String Routeid = rs.getString(3);
                
                rs2 = st.executeQuery("select Bus_Number from TB_Buses where Bus_id = '" + Busid + "'");
                 if(rs2.next())
                 {
                     tm.setValueAt(rs2.getString(1),0, 1);
                 }
                rs3 = st.executeQuery("select R_Name from TB_Route where R_id = '" + Routeid + "'");
                 if(rs3.next())
                 {
                     tm.setValueAt(rs3.getString(1),0, 2);
                 }
                
                 
            }
                
                
             else{
                    JOptionPane.showMessageDialog(this,"Invalid ID ! !");
                    searchtxt.requestFocus();
                 }
            } catch (SQLException | HeadlessException ex) {
                    ex.printStackTrace();
                   JOptionPane.showMessageDialog(this,"Invalid Search ! !");
            }
        }

        else if(strbox.equals("Route Name"))
        {
            try {
                rs = st.executeQuery("select * from TB_Routinee where R_Id = (select R_id from TB_Route where R_Name='" + searchtxt.getText() + "')");
                
             if(rs.next())
            {   
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
               , rs.getString(3), rs.getString(4), rs.getString(5)});
               // For Bus_Name and Route_Name
                String Busid = rs.getString(2);
                String Routeid = rs.getString(3);
                
                rs2 = st.executeQuery("select Bus_Number from TB_Buses where Bus_id = '" + Busid + "'");
                 if(rs2.next())
                 {
                     tm.setValueAt(rs2.getString(1),0, 1);
                 }
                rs3 = st.executeQuery("select R_Name from TB_Route where R_id = '" + Routeid + "'");
                 if(rs3.next())
                 {
                     tm.setValueAt(rs3.getString(1),0, 2);
                 } 
            
            
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry");
              searchtxt.requestFocus();
             }


            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }
        }

        else if(strbox.equals("Bus Num"))
        {
            try {
                rs = st.executeQuery("select * from TB_Routinee where Bus_id = (select Bus_id from TB_Buses where Bus_Number='" + searchtxt.getText() + "') ");
               
             if(rs.next())
            {
               
               tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                , rs.getString(3), rs.getString(4), rs.getString(5)});
                // For Bus_Name and Route_Name
                String Busid = rs.getString(2);
                String Routeid = rs.getString(3);
                
                rs2 = st.executeQuery("select Bus_Number from TB_Buses where Bus_id = '" + Busid + "'");
                 if(rs2.next())
                 {
                     tm.setValueAt(rs2.getString(1),0, 1);
                 }
                rs3 = st.executeQuery("select R_Name from TB_Route where R_id = '" + Routeid + "'");
                 if(rs3.next())
                 {
                     tm.setValueAt(rs3.getString(1),0, 2);
                 }
                
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
              searchtxt.requestFocus();
             }



            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }
        }
        else if(strbox.equals("Date"))
        {
            try {
                rs = st.executeQuery("select * from TB_Routinee where Rout_date = '" + searchtxt.getText() + "'");

             if(rs.next())
            {
                
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4), rs.getString(5)});
                // For Bus_Name and Route_Name
                String Busid = rs.getString(2);
                String Routeid = rs.getString(3);
                
                rs2 = st.executeQuery("select Bus_Number from TB_Buses where Bus_id = '" + Busid + "'");
                 if(rs2.next())
                 {
                     tm.setValueAt(rs2.getString(1),0, 1);
                 }
                rs3 = st.executeQuery("select R_Name from TB_Route where R_id = '" + Routeid + "'");
                 if(rs3.next())
                 {
                     tm.setValueAt(rs3.getString(1),0, 2);
                 }
            }
             else
             {
             JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
             searchtxt.requestFocus();
             }


            } catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(this,"Invalid Entry , Record Doesnt Exists!");
            }
        }

        else if(strbox.equals("Time"))
        {   
            
            try {
                rs = st.executeQuery("select * from TB_Routinee where Rout_time = '" + searchtxt.getText() + "'");
                
                
            if(rs.next())
            {
                
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4), rs.getString(5)});
                // For Bus_Name and Route_Name
                String Busid = rs.getString(2);
                String Routeid = rs.getString(3);
                
                rs2 = st.executeQuery("select Bus_Number from TB_Buses where Bus_id = '" + Busid + "'");
                 if(rs2.next())
                 {
                     tm.setValueAt(rs2.getString(1),0, 1);
                 }
                rs3 = st.executeQuery("select R_Name from TB_Route where R_id = '" + Routeid + "'");
                 if(rs3.next())
                 {
                     tm.setValueAt(rs3.getString(1),0, 2);
                 }
            
            }
            else
            {
            JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
            searchtxt.requestFocus();
            }


            } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }

        }
        
        else
        {
            JOptionPane.showMessageDialog(this,"Invalid Search");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        // TODO add your handling code here:
        
        String strbox = searchbox2.getSelectedItem().toString();

        if(strbox.equals(" "))
        {
               JOptionPane.showMessageDialog(this, "Error! \n " +
                       "Choose one Value From Combo Box \n to be searched");
                       searchbox2.requestFocus();
                       searchtxt2.setText(null);
        }
        else if(searchtxt2.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Please Insert Value To Be Searched!");
            searchtxt2.requestFocus();
        }

        else if(strbox.equals("Routinee Id"))
        {
            try {
                rs = st.executeQuery("select * from TB_Routinee where Rout_ID = '" + searchtxt2.getText() + "'");
                
             if(rs.next())
            {   
                String a;
                routidtxt.setText(rs.getString(1));
                bnametxt.setText(rs.getString(2));
                rnametxt.setText(rs.getString(3));
                datetxt.setText(rs.getString(4));
                timetxt.setText(rs.getString(5));
                a=rs.getString(3);
                System.out.println("123");
                rs2 = st.executeQuery("select bus_number from TB_Buses where Bus_id = "+rs.getString(2)+"");
                if(rs2.next())
                {
                bnametxt.setText(rs2.getString(1));
                }
                rs3 = st.executeQuery("select R_Name from TB_Route where R_id = "+a+"");
                if(rs3.next())
                {System.out.println("1234");
                rnametxt.setText(rs3.getString(1));
                }
                
            }
             else{
        JOptionPane.showMessageDialog(this,"Invalid Search Or Record Doesn't Exists ! !");
        searchtxt2.requestFocus();
             }
            } catch (SQLException | HeadlessException ex) {
            }
        }

        else if(strbox.equals("Bus Number"))
        {
            try {
                rs = st.executeQuery("select * from TB_Routinee where Bus_Id =(select Bus_id from TB_Buses where Bus_Number='" + searchtxt2.getText() + "' ) " );

             if(rs.next())
            {
                String a;
                routidtxt.setText(rs.getString(1));
                bnametxt.setText(rs.getString(2));
                rnametxt.setText(rs.getString(3));
                datetxt.setText(rs.getString(4));
                timetxt.setText(rs.getString(5));
                a=rs.getString(3);
                System.out.println("123");
                rs2 = st.executeQuery("select bus_number from TB_Buses where Bus_id = "+rs.getString(2)+"");
                if(rs2.next())
                {
                bnametxt.setText(rs2.getString(1));
                }
                rs3 = st.executeQuery("select R_Name from TB_Route where R_id = "+a+"");
                if(rs3.next())
                {System.out.println("1234");
                rnametxt.setText(rs3.getString(1));
                }
                
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry");
              searchtxt2.requestFocus();
             }


            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Invalid Entry Or Record Doesnt Exists!");
            }
        }

        else if(strbox.equals("Route Name"))
        {
            try {
                rs = st.executeQuery("select * from TB_Routinee where R_id =(select R_id from TB_Route where R_Name= '" + searchtxt2.getText() + "' )");

             if(rs.next())
            {
                String a;
                routidtxt.setText(rs.getString(1));
                bnametxt.setText(rs.getString(2));
                rnametxt.setText(rs.getString(3));
                datetxt.setText(rs.getString(4));
                timetxt.setText(rs.getString(5));
                a=rs.getString(3);
                System.out.println("123");
                rs2 = st.executeQuery("select bus_number from TB_Buses where Bus_id = "+rs.getString(2)+"");
                if(rs2.next())
                {
                bnametxt.setText(rs2.getString(1));
                }
                rs3 = st.executeQuery("select R_Name from TB_Route where R_id = "+a+"");
                if(rs3.next())
                {System.out.println("1234");
                rnametxt.setText(rs3.getString(1));
                }
                
                
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
              searchtxt2.requestFocus();
             }



            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Invalid Entry Or Record Doesnt Exists!");
            }
        }
        else if(strbox.equals("Date"))
        {
            try {
                rs = st.executeQuery("select * from TB_Routinee where Rout_Date = '" + searchtxt2.getText() + "'");

             if(rs.next())
            {
                
                String a;
                routidtxt.setText(rs.getString(1));
                bnametxt.setText(rs.getString(2));
                rnametxt.setText(rs.getString(3));
                datetxt.setText(rs.getString(4));
                timetxt.setText(rs.getString(5));
                a=rs.getString(3);
                System.out.println("123");
                rs2 = st.executeQuery("select bus_number from TB_Buses where Bus_id = "+rs.getString(2)+"");
                if(rs2.next())
                {
                bnametxt.setText(rs2.getString(1));
                }
                rs3 = st.executeQuery("select R_Name from TB_Route where R_id = "+a+"");
                if(rs3.next())
                {System.out.println("1234");
                rnametxt.setText(rs3.getString(1));
                }
                
                
            }
             else
             {
             JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
             searchtxt2.requestFocus();
             }


            } catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(this,"Invalid Entry Or Record Doesnt Exists!");
            }
        }

        else if(strbox.equals("Time"))
        {
            try {
                rs = st.executeQuery("select * from TB_Routinee where Rout_Time = '" + searchtxt2.getText() + "'");

            if(rs.next())
            {
               String a;
                routidtxt.setText(rs.getString(1));
                bnametxt.setText(rs.getString(2));
                rnametxt.setText(rs.getString(3));
                datetxt.setText(rs.getString(4));
                timetxt.setText(rs.getString(5));
                a=rs.getString(3);
                
                rs2 = st.executeQuery("select bus_number from TB_Buses where Bus_id = "+rs.getString(2)+"");
                if(rs2.next())
                {
                bnametxt.setText(rs2.getString(1));
                }
                rs3 = st.executeQuery("select R_Name from TB_Route where R_id = "+a+"");
                if(rs3.next())
                {
                rnametxt.setText(rs3.getString(1));
                }
                
            }
            else
            {
            JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
            searchtxt2.requestFocus();
            }


            } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(this,"Invalid Entry Or Record Doesnt Exists!");
            }

        }
        else
        {
            JOptionPane.showMessageDialog(this,"Invalid Search");
        }
        
        
    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void BtnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExitActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_BtnExitActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        
        if(routidtxt.getText().equals("") || bnametxt.getText().equals("") || rnametxt.getText().equals("")
                || datetxt.getText().equals("") || timetxt.getText().equals(""))
        {
             JOptionPane.showMessageDialog(this, "Please Check all the fields");
        }
        
        else
        {    
        
        String id= "'" + routidtxt.getText() + "'";
        String bnum = "'" + bnametxt.getText() + "'";
        String rname = "'" + rnametxt.getText() + "'";
        String date = "'" + datetxt.getText() + "'";
        String time = "'" + timetxt.getText() + "'";
        
        try
                {

                st.executeUpdate("Declare @bid int set @bid=(select bus_id from TB_Buses where Bus_number="+bnum+") declare @rid int set @rid=(select r_id from TB_Route where R_Name="+rname+")"+"Update TB_Routinee set bus_id = @bid ,R_id=@rid,Rout_date="+date+",Rout_time="+time+" where Rout_id="+id+"    ");
                
                JOptionPane.showMessageDialog(this, "Data Saved");
                


                }catch(SQLException | HeadlessException e)
                {   
                    JOptionPane.showMessageDialog(this, "Error ! Please Check all the fields again");
                }
        
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void searchboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchboxActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_searchboxActionPerformed

    private void searchboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchboxItemStateChanged
        // TODO add your handling code here:
        String strbox = searchbox.getSelectedItem().toString();
        if(strbox.equals("Time"))
        {
        searchtxt.setText(":");
        }
    }//GEN-LAST:event_searchboxItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnExit;
    private javax.swing.JPanel Update;
    private javax.swing.JTextField bnametxt;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField datetxt;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField rnametxt;
    private javax.swing.JTextField routidtxt;
    private javax.swing.JComboBox searchbox;
    private javax.swing.JComboBox searchbox2;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JTextField searchtxt2;
    private javax.swing.JTable tbl;
    private javax.swing.JTextField timetxt;
    // End of variables declaration//GEN-END:variables
}
