/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mypack;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wali
 */


public class ViewRoute extends javax.swing.JInternalFrame {

    /**
     * Creates new form AdminLogin
     */
    
    Connection con=null;
    Statement st;
    ResultSet rs;
    
    public ViewRoute() 
    {
        initComponents();
        con=Connect.ConnectDB();
         try 
        {
         st = con.createStatement();
        } catch (SQLException ex) 
        {
            JOptionPane.showMessageDialog(this, ex);
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        searchbox = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        searchtxt = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        Update = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        searchbox1 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        nametxt = new javax.swing.JTextField();
        btnSearch1 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        searchtxt2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        routestxt = new javax.swing.JTextField();
        routeetxt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        idtxt = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        Reset = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setClosable(true);
        setTitle("View And Update Route's");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/img/adminicon.png"))); // NOI18N
        setVisible(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(102, 51, 255));

        searchbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Id", "Route Name", "Route Start", "Route End" }));

        jLabel11.setText("Search By ");

        btnSearch.setBackground(new java.awt.Color(0, 0, 0));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("View");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Exit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Clear Table");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Route Id", "Route Name", "Route Start", "Route End"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl);

        jButton7.setBackground(new java.awt.Color(0, 0, 0));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("View All");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 114, Short.MAX_VALUE)
                .addComponent(jButton7)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(searchtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton3)
                    .addComponent(jButton7))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jTabbedPane1.addTab("View", jPanel2);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setForeground(new java.awt.Color(102, 51, 255));

        searchbox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Id", "Route Name", "Route Start", "Route End" }));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Search By : ");

        btnSearch1.setBackground(new java.awt.Color(0, 0, 0));
        btnSearch1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSearch1.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch1.setText("View");
        btnSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch1ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Exit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Update");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("Route Name ");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("Route Start");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("Route End");

        idtxt.setEditable(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setText("Route ID ");

        Reset.setBackground(new java.awt.Color(0, 0, 0));
        Reset.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Reset.setForeground(new java.awt.Color(255, 255, 255));
        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(searchbox1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(searchtxt2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Reset, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(routestxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(routeetxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idtxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jButton6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(btnSearch1)
                    .addComponent(searchtxt2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idtxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nametxt, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(routestxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(routeetxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(Reset))
                .addGap(100, 100, 100))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {idtxt, nametxt, routeetxt, routestxt});

        javax.swing.GroupLayout UpdateLayout = new javax.swing.GroupLayout(Update);
        Update.setLayout(UpdateLayout);
        UpdateLayout.setHorizontalGroup(
            UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        UpdateLayout.setVerticalGroup(
            UpdateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UpdateLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 305, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Update", Update);

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 24)); // NOI18N
        jLabel4.setText("View And Update Route's");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel tm = (DefaultTableModel)tbl.getModel();
        tm.setNumRows(0);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel tm = (DefaultTableModel)tbl.getModel();
        tm.setNumRows(0);
        String strbox = searchbox.getSelectedItem().toString();

        if(strbox.equals(" "))
        {
               JOptionPane.showMessageDialog(this, "Error! \n " +
                       "Choose one Value From Combo Box \n to be searched");
                       searchbox.requestFocus();
                       searchtxt.setText(null);
        }
        else if(searchtxt.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Please Insert Value To Be Searched!");
            searchtxt.requestFocus();
        }

        else if(strbox.equals("Id"))
        {
            try {
                rs = st.executeQuery("select * from TB_Route where R_id = '" + searchtxt.getText() + "'");
                
             if(rs.next())
            {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                 , rs.getString(3), rs.getString(4)});
            }
             else{
                    JOptionPane.showMessageDialog(this,"Invalid ID ! !");
                    searchtxt.requestFocus();
             }
            } catch (Exception ex) {
  
                   JOptionPane.showMessageDialog(this,"Invalid Search ! !");
                
            }
        }

        else if(strbox.equals("Route Name"))
        {
            try {
                rs = st.executeQuery("select * from TB_Route where R_Name = '" + searchtxt.getText() + "'");

             if(rs.next())
            {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4)});
           
            while(rs.next())
            {
            tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
            , rs.getString(3), rs.getString(4)});        
            }
            
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry");
              searchtxt.requestFocus();
             }


            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }
        }

        else if(strbox.equals("Route Start"))
        {
            try {
                rs = st.executeQuery("select * from TB_Route where R_Start = '" + searchtxt.getText() + "'");

             if(rs.next())
            {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4)});
                while(rs.next())
                {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                , rs.getString(3), rs.getString(4)});        
                }
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
              searchtxt.requestFocus();
             }



            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }
        }
        else if(strbox.equals("Route End"))
        {
            try {
                rs = st.executeQuery("select * from TB_Route where R_End = '" + searchtxt.getText() + "'");

             if(rs.next())
            {
                
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4)});
                while(rs.next())
                {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                , rs.getString(3), rs.getString(4)});        
                }
            }
             else
             {
             JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
             searchtxt.requestFocus();
             }


            } catch (SQLException ex) 
            {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Invalid Entry , Record Doesnt Exists!");
            }
        }

        else if(strbox.equals("Stop Quantity"))
        {
            try {
                rs = st.executeQuery("select * from TB_Route where R_StopQty = '" + searchtxt.getText() + "'");

            if(rs.next())
            {
                
            tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                        , rs.getString(3), rs.getString(4)});
                while(rs.next())
                {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                , rs.getString(3), rs.getString(4)});        
                }
            
            }
            else
            {
            JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
            searchtxt.requestFocus();
            }


            } catch (SQLException ex) {
                ex.printStackTrace();
                 JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }

        }
        
        else
        {
            JOptionPane.showMessageDialog(this,"Invalid Search");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch1ActionPerformed
        // TODO add your handling code here:
        
       String strbox1 = searchbox1.getSelectedItem().toString();

        if(strbox1.equals(" "))
        {
               JOptionPane.showMessageDialog(this, "Error! \n " +
                       "Choose one Value From Combo Box \n to be searched");
                       searchbox1.requestFocus();
                       searchtxt2.setText(null);
        }
        else if(searchtxt2.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Please Insert Value To Be Searched!");
            searchtxt2.requestFocus();
        }

        else if(strbox1.equals("Id"))
        {
            try {
                rs = st.executeQuery("select * from TB_Route where R_id = '" + searchtxt2.getText() + "'");
                
             if(rs.next())
            {
                idtxt.setText(rs.getString(1));
                nametxt.setText(rs.getString(2));
                routestxt.setText(rs.getString(3));
                routeetxt.setText(rs.getString(4));
                
               
            }
             else{
        JOptionPane.showMessageDialog(this,"Invalid ID ! !");
        searchtxt2.requestFocus();
             }
            } catch (Exception ex) {
  
                  ex.printStackTrace();
                
            }
        }

        else if(strbox1.equals("Route Name"))
        {
            try {
                rs = st.executeQuery("select * from TB_Route where R_Name = '" + searchtxt2.getText() + "'");

             if(rs.next())
            {
                idtxt.setText(rs.getString(1));
                nametxt.setText(rs.getString(2));
                routestxt.setText(rs.getString(3));
                routeetxt.setText(rs.getString(4));
                
            
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry");
              searchtxt2.requestFocus();
             }


            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }
        }

        else if(strbox1.equals("Route Start"))
        {
            try {
                rs = st.executeQuery("select * from TB_Route where R_Start = '" + searchtxt2.getText() + "'");

             if(rs.next())
            {
                idtxt.setText(rs.getString(1));
                nametxt.setText(rs.getString(2));
                routestxt.setText(rs.getString(3));
                routeetxt.setText(rs.getString(4));
            }
             else
             {
              JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
              searchtxt2.requestFocus();
             }



            } catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }
        }
        else if(strbox1.equals("Route End"))
        {
            try {
                rs = st.executeQuery("select * from TB_Route where R_End = '" + searchtxt2.getText() + "'");

             if(rs.next())
            {
                
                idtxt.setText(rs.getString(1));
                nametxt.setText(rs.getString(2));
                routestxt.setText(rs.getString(3));
                routeetxt.setText(rs.getString(4));
            }
             else
             {
             JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
             searchtxt2.requestFocus();
             }


            } catch (SQLException ex) 
            {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this,"Invalid Entry , Record Doesnt Exists!");
            }
        }

        else if(strbox1.equals("Stop Quantity"))
        {
            try {
                rs = st.executeQuery("select * from TB_Route where R_StopQty = '" + searchtxt2.getText() + "'");

            if(rs.next())
            {
                
                idtxt.setText(rs.getString(1));
                nametxt.setText(rs.getString(2));
                routestxt.setText(rs.getString(3));
                routeetxt.setText(rs.getString(4));
            
            }
            else
            {
            JOptionPane.showMessageDialog(this,"Invalid Entry \n Please Try Again");
            searchtxt2.requestFocus();
            }


            } catch (SQLException ex) {
                ex.printStackTrace();
                 JOptionPane.showMessageDialog(this,"Invalid Entry, Record Doesnt Exists!");
            }

        }
        
        else
        {
            JOptionPane.showMessageDialog(this,"Invalid Search");
        }
        
        
    }//GEN-LAST:event_btnSearch1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        String id= "'" + idtxt.getText() + "'";
        String name = "'" + nametxt.getText() + "'";
        String start = "'" + routestxt.getText() + "'";
        String end = "'" + routeetxt.getText() + "'";
        
        if(idtxt.getText().equals("") || nametxt.getText().equals("") || routestxt.getText().equals("") ||
                routeetxt.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Please Fill All The Fields");
        }
        else
        {
        try
                {

                st.executeUpdate("Update TB_Route set R_Name = "+name+" ,R_Start="+start+",R_End="+end+" where R_id="+id+"    ");
                
                JOptionPane.showMessageDialog(this, "Data Saved");
                idtxt.setText("");
                nametxt.setText("");
                routestxt.setText("");
                routeetxt.setText("");


                }catch(SQLException | HeadlessException e)
                {   
                }
        }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         DefaultTableModel tm = (DefaultTableModel)tbl.getModel();
        tm.setNumRows(0);
        try {
                rs = st.executeQuery("select * from TB_Route ");
                
             while(rs.next())
            {
                tm.insertRow(tm.getRowCount(), new Object[]{rs.getString(1), rs.getString(2)
                 , rs.getString(3), rs.getString(4)});
            }
             }
             catch (Exception ex) {
  
                   JOptionPane.showMessageDialog(this,"Invalid Search !");
                
            }
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
                idtxt.setText("");
                nametxt.setText("");
                routestxt.setText("");
                routeetxt.setText("");
    }//GEN-LAST:event_ResetActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Reset;
    private javax.swing.JPanel Update;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSearch1;
    private javax.swing.JTextField idtxt;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nametxt;
    private javax.swing.JTextField routeetxt;
    private javax.swing.JTextField routestxt;
    private javax.swing.JComboBox searchbox;
    private javax.swing.JComboBox searchbox1;
    private javax.swing.JTextField searchtxt;
    private javax.swing.JTextField searchtxt2;
    private javax.swing.JTable tbl;
    // End of variables declaration//GEN-END:variables
}
